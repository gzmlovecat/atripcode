<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trip.mapper.ArticleMapper" >

    <resultMap id="BaseResultMap" type="com.trip.dto.ArticleDto" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="soldout" property="soldout" jdbcType="TINYINT" />
        <result column="publish_time" property="publishTime" jdbcType="VARCHAR" />
        <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="created_by" property="createdBy" jdbcType="BIGINT" />
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
        <result column="updated_by" property="updatedBy" jdbcType="BIGINT" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, content,soldout,publish_time,created_at,created_by,updated_at,updated_by
    </sql>

    <select id="selectArticleList" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List"/>
        from article t
    </select>


    <insert id="insertArticle" parameterType="com.trip.dto.ArticleDto"  useGeneratedKeys="true" keyProperty="id">
        insert into article (
        content,
        soldout,
        publish_time,
        is_delete,
        created_at,
        created_by,
        updated_at,
        updated_by
        )
        values (
        #{content,jdbcType=VARCHAR},
        false,
        #{publishTime,jdbcType=VARCHAR},
        #{isDelete,jdbcType=VARCHAR},
        #{createdAt,jdbcType=DATE},
        #{createdBy,jdbcType=BIGINT},
        #{createdAt,jdbcType=DATE},
        #{createdBy,jdbcType=BIGINT}
        )

    </insert>

    <update id="updateArticle" parameterType="com.trip.dto.ArticleDto">
        update article t
        set t.updated_at=#{param.updatedAt},t.updated_by=#{param.updatedBy}
        <if test="param.content != null">
            ,t.content=#{param.content}
        </if>
        <if test="param.soldout != null">
            ,t.soldout=#{param.soldout}
        </if>
        <if test="param.publishTime != null">
            ,t.publish_time=#{param.publishTime}
        </if>
        <if test="param.isDelete != null">
            ,t.is_delete=#{param.isDelete}
        </if>

        where t.id=#{param.id}
    </update>

    <select id="selectArticleByParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from article t
        where 1=1 and t.is_delete=0
        <if test="content != null">
            and t.content like concat("%",#{content},"%")
        </if>
        <!-- modify 20180802 bug25 列表数据以发布时间排序，大于当前时间不显示 start -->
        <!--<if test="publishTime != null">
            and t.publish_time >= #{publishTime}
        </if>
         order by t.created_at desc -->
        <if test="publishTime != null">
        	and t.publish_time >= #{publishTime}
        </if>
            and t.publish_time &lt;= now()
            order by t.publish_time desc
        <!-- modify 20180802 bug25 列表数据以发布时间排序，大于当前时间不显示 end -->

    </select>

</mapper>